4. PRIMEIROS COMANDO COM GIT
* INICIANDO o git e criando um commit
 - comandos
git init
git add
git commit

$ ls // listar
$ cd workspace // nome da pasta
control + l // limpar tudo

$mkdir livro-receitas  "nome da pasta que deseja $ ls livro-receitas
$ cd livro-receitas
criar"
$ git init
$ ls
$ ls -a // listar oculto
$ cd . git/ // visualisa a pasta
$ cd ..
// Criar arquivo
$ git config --global user.email "shirley_1979_5@hotmail.com"
$ git config --global user.name cirleioliveira
$ git add *
$ git commit -m "commit inicial"

-------------------------
Markdown 			
# Titulo nivel 1 // tamanho do titulo
## Titulo nivel 2
### Titulo nivel 3
#### Titulo nivel 4
##### Titulo nivel 5
###### Titulo nivel 6
-----------------------------
navegador 
Titulo nivel 1
...
Titulo nivel 6
-----------------------------
HTML
<h1> Titulo nivel 1 </h1>
...
<h6> Titulo nivel 6 </h6>
-----------------------------

//criar um arquivo de texto que desejar ex. nome arquivo "estrogonofe.md" sim para o aviso video 11:15

**negrito**
_italico_
espaço "-" espaço //para lista
buscar em ajudar para ver a formação de markdown
*****************************************************

5. CICLO DE VIDA DOS ARQUIVOS NO GIT
* PASSO A PASSO NO CICLO DE VIDA
- tracked
     untracked     unmodified  		    modified      staged
	|		|	  		|	    |
        |----add o arquivo --------------------------->	    | >git add nome arquivo
	|		|--edita arquivo-------	|	    | >git add *
	|<--remove arq-	|			|	    | >git add.
	|		|			|<-commit---| >git commit -m "msg.."


				     ---------------------
				     --    servidor	--
				     --	Remote repository-
				     ---------------------
----------------------------------------------------------
-- Ambiente de desencolvimento				--
-- -----------	    ------------	---------------	--
--  working  -	    --staging --	-    local    -	--
-- directory -	    --  area  --	- respocitory -	--
-- -----------	    ------------	---------------	--
	   > git add	   >git commit -m
----------------------------------------------------------
$ ls 
$ git status
$ mkdir receitas //criar pasta
$ mv strogonof.md ./receitas //remover
$ ls
$ git status
$ git add strogonof.md receitas/
$ git status
$ git commit -m "criar pasta receitas, mover arquivo para receitas"
$ git status
$ echo > README.md
$ git status
$ git add *
$ ls
$ git status
$ git commit -m "add index"
******************************************************

6. INTROCUÇÃO AO GITHUB
* TRABALHANDO COM GITHUB
-------------------------------------------------------
// não fazer
$ git config -- list //para ver as configurações no git
Criar github
//se o git estive configurado o comando abaixo apaga a config existente
$ git config --global --unset user.email
$ git config --global --unset user.nickname
-------------------------------------------------------
$ git config --global user.email "shirley_1979_5@hotmail.com"
$ git config --global --unset user.name "cirleioliveira"
$ git config -- list

$ git remote add origin https:// ....   //add o link
$ git remote -v
$ git status
$ git push origin master
*******************************************************

7. RESOLVENDO CONFLITOS
- como os conflitos acontece no GitHub e comoresolve-los

add alteração
$ ls
$ git status
$ git add *
$ ls
$ git status
$ git commit - m"add receita pave"
$ git push origin master
// ! foi regeitado

$ git pull origin master // corrigir o arquivo
$ git status
$ git add *
$ git commit -m "Resolve conflito"
$ git push origin master

clonar repositorio existente no GitHub pelo git
$ git clone https://github.com/cirleioliveira/projeto-sds4.git
$ ls
$ cd cpython/
$ ls -a   
$ git remote -v

 






















